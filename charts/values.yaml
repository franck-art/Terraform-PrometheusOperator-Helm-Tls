# Alertmanager Configurations
alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
      - match:
          alertname: Watchdog
        receiver: 'slack'
    inhibit_rules:
      - target_match_re:
           alertname: '.+Overcommit'
        source_match:
           alertname: 'Watchdog'
        equal: ['prometheus']
    receivers:
    - name: 'null'
    - name: 'slack'
      slack_configs:
      - api_url: 'PUT YOUR API URL' #-------> SLACK URL WEBHOOK
        send_resolved: true
        channel: 'PUT YOUR SLACK CHANNEL' # -----------> SLACK CHANNEL
        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
        text: |-
          {{ range .Alerts }}
            *Alert:* {{ .Labels.alertname }} - `{{ .Labels.severity }}`
            *Description:* {{ .Annotations.message }}
            *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook_url }}|:spiral_note_pad:>
            *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}

  ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        certmanager.k8s.io/acme-challenge-type: "http01"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"

      ## Hosts must be provided if Ingress is enabled.
      hosts:
        - alertmanager.demo.example.com

      ## Paths to use for ingress rules - one path should match the alertmanagerSpec.routePrefix
      paths:
      - /
      
      ## TLS configuration for Alertmanager Ingress
      tls:
      - secretName: tls-cert-alertmanager
        hosts:
        - alertmanager.demo.example.com

# Grafana Configurations
grafana:
  enabled: true
  ingress:
    enabled: true
    ## Annotations for Grafana Ingress
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      certmanager.k8s.io/acme-challenge-type: "http01"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Hostnames must be provided if Ingress is enable.
    hosts:
      - grafana.demo.example.com

    ## Path for grafana ingress
    path: /

    ## TLS configuration for grafana Ingress
    tls:
    - secretName: tls-cert
      hosts:
      - grafana.demo.example.com
